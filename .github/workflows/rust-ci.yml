name: Rust CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'negaboku-bevy/**/*.rs'
      - 'negaboku-bevy/Cargo.toml'
      - 'negaboku-bevy/Cargo.lock'
      - '.github/workflows/rust-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'negaboku-bevy/**/*.rs'
      - 'negaboku-bevy/Cargo.toml'
      - 'negaboku-bevy/Cargo.lock'
      - '.github/workflows/rust-ci.yml'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

defaults:
  run:
    working-directory: ./negaboku-bevy

jobs:
  # 必須チェック：フォーマット・静的解析
  lint:
    name: Format & Lint Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: ./negaboku-bevy/target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

    # 必須: フォーマット確認（落ちたら即NG）
    - name: Check formatting
      run: cargo fmt -- --check

    # 必須: 静的解析（nurseryレベル）
    - name: Run clippy (nursery level)
      run: cargo clippy --all-targets --all-features -- -D warnings -W clippy::nursery

  # 必須チェック：テスト
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ./negaboku-bevy/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxkbcommon-x11-0

    # 必須: 全テスト実行
    - name: Run tests
      run: cargo test --all --verbose

  # 必須チェック：セキュリティ・依存関係
  security:
    name: Security & Dependencies Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    # セキュリティ: cargo audit
    - name: Install cargo-audit
      run: cargo install --force cargo-audit

    - name: Security audit
      run: cargo audit

    # 依存関係: cargo deny
    - name: Install cargo-deny
      run: cargo install --force cargo-deny

    - name: Check dependencies and licenses
      run: cargo deny check

    # 未使用依存: cargo udeps（Releaseビルド）
    - name: Install cargo-udeps
      run: cargo install --force cargo-udeps

    - name: Check unused dependencies
      run: cargo +nightly udeps --release

  # 必須チェック：アセット健全性
  asset_sanity:
    name: Asset Sanity Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ./negaboku-bevy/target
        key: ${{ runner.os }}-cargo-asset-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxkbcommon-x11-0

    # アセット健全性: 必須フォント・画像の存在確認
    - name: Asset sanity test
      run: cargo test asset_sanity --verbose

  # 必須チェック：ビルド確認
  build:
    name: Build Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    needs: [lint, test, security]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ./negaboku-bevy/target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxkbcommon-x11-0

    - name: Build release
      run: cargo build --release --verbose

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: negaboku-bevy-${{ matrix.os }}
        path: ./negaboku-bevy/target/release/negaboku-bevy*
        retention-days: 7
