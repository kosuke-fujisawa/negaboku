name: Scenario Quality Check with textlint

on:
  pull_request:
    paths:
      - 'negaboku-bevy/assets/scenarios/**/*.md'
      - '.textlintrc*.json'
      - 'package.json'
      - 'package-lock.json'
      - 'textlint-rules/**/*.js'
      - '.github/workflows/textlint.yml'
  push:
    branches:
      - main
    paths:
      - 'negaboku-bevy/assets/scenarios/**/*.md'
      - '.textlintrc*.json'
      - 'package.json'
      - 'package-lock.json'
      - 'textlint-rules/**/*.js'
      - '.github/workflows/textlint.yml'

jobs:
  textlint:
    name: シナリオ品質チェック
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run textlint check (JSON output)
        id: textlint
        run: |
          echo "Running textlint on scenario files..."
          echo "Current directory: $(pwd)"
          echo "Available config files:"
          ls -la .textlintrc*
          echo "Target files:"
          ls -la negaboku-bevy/assets/scenarios/**/*.md || echo "No scenario files found"

          # JSON形式でtextlint結果を取得
          npm run textlint:check -- --format json > textlint-results.json 2>/dev/null || true
          # 人間可読形式も保存（エラーでも続行）
          npm run textlint:check > textlint-results.txt 2>&1 || true

          # 結果を表示
          if [ -s textlint-results.txt ]; then
            echo "TextLint results:"
            cat textlint-results.txt
          else
            echo "No TextLint results found."
            echo "[]" > textlint-results.json
          fi

      - name: Count errors and warnings (JSON parsing)
        id: count-issues
        run: |
          if [ -f textlint-results.json ]; then
            # JSON結果をjqで厳密に集計
            ERROR_COUNT=$(cat textlint-results.json | jq '[.[] | .messages | length] | add // 0')
            WARNING_COUNT=0  # textlintは現在warning区分なし
            FIXABLE_COUNT=$(cat textlint-results.json | jq '[.[] | .messages | map(select(.fix)) | length] | add // 0')
            echo "ERROR_COUNT=${ERROR_COUNT}" >> $GITHUB_ENV
            echo "WARNING_COUNT=${WARNING_COUNT}" >> $GITHUB_ENV
            echo "FIXABLE_COUNT=${FIXABLE_COUNT}" >> $GITHUB_ENV
            echo "エラー数: ${ERROR_COUNT}, 警告数: ${WARNING_COUNT}, 自動修正可能: ${FIXABLE_COUNT}"
          else
            echo "ERROR_COUNT=0" >> $GITHUB_ENV
            echo "WARNING_COUNT=0" >> $GITHUB_ENV
            echo "FIXABLE_COUNT=0" >> $GITHUB_ENV
          fi

      - name: Comment PR with results (fork対応・重複防止)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const marker = '<!-- textlint-bot-comment -->';

            // 既存コメントをチェック（重複防止）
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const existingComment = comments.data.find(comment =>
              comment.body.includes(marker) && comment.user.type === 'Bot'
            );

            let resultsContent = '';
            if (fs.existsSync('textlint-results.txt')) {
              resultsContent = fs.readFileSync('textlint-results.txt', 'utf8');
            }

            const errorCount = process.env.ERROR_COUNT || '0';
            const warningCount = process.env.WARNING_COUNT || '0';
            const fixableCount = process.env.FIXABLE_COUNT || '0';

            let status = '✅ **品質チェック完了**';
            let summary = 'シナリオファイルの品質チェックが完了しました。問題は見つかりませんでした。';

            if (parseInt(errorCount) > 0) {
              status = '❌ **品質チェック失敗**';
              summary = `シナリオファイルに${errorCount}個のエラーが見つかりました。修正が必要です。`;
            } else if (parseInt(warningCount) > 0) {
              status = '⚠️ **品質チェック警告**';
              summary = `シナリオファイルに${warningCount}個の警告が見つかりました。`;
            }

            let comment = `${marker}
            ## ${status}

            ${summary}

            ### 📊 チェック結果サマリー
            - **エラー**: ${errorCount}件
            - **警告**: ${warningCount}件
            - **自動修正可能**: ${fixableCount}件

            ### 🔧 修正方法
            `;

            if (parseInt(fixableCount) > 0) {
              comment += `
            **自動修正可能な問題があります:**
            \`\`\`bash
            npm run textlint:fix
            \`\`\`
            `;
            }

            comment += `
            **手動チェック:**
            \`\`\`bash
            npm run textlint:check
            \`\`\`
            `;

            if (resultsContent && resultsContent.trim()) {
              comment += `
            ### 📝 詳細結果
            <details>
            <summary>textlint実行結果を表示</summary>

            \`\`\`
            ${resultsContent.substring(0, 4000)}${resultsContent.length > 4000 ? '\n... (truncated)' : ''}
            \`\`\`

            </details>
            `;
            }

            comment += `

            ---
            🤖 Generated with [Claude Code](https://claude.ai/code) - Scenario Quality Management System
            `;

            if (existingComment) {
              // 既存コメントを更新
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // 新規コメント投稿
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Upload TextLint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: textlint-results
          path: |
            textlint-results.json
            textlint-results.txt
          retention-days: 30

      - name: Fail job if errors found
        if: env.ERROR_COUNT != '0'
        run: |
          echo "❌ textlint found ${ERROR_COUNT} errors in scenario files"
          echo "Please fix the errors before merging."
          exit 1

      - name: Success summary
        if: env.ERROR_COUNT == '0'
        run: |
          echo "✅ シナリオ品質チェック完了"
          echo "エラー: ${ERROR_COUNT}件, 警告: ${WARNING_COUNT}件, 自動修正可能: ${FIXABLE_COUNT}件"
